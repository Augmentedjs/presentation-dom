{"version":3,"sources":["webpack://presentation-dom/webpack/universalModuleDefinition","webpack://presentation-dom/webpack/bootstrap","webpack://presentation-dom/./src/index.js","webpack://presentation-dom/./src/dom.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Dom","isString","val","constructor","[object Object]","window","innerHeight","innerWidth","el","onlyText","myEl","selector","innerHTML","query","document","nodelist","display","cls","setValue","template","mount","clone"],"mappings":"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","file":"presentation-dom.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"presentation-dom\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"presentation-dom\"] = factory();\n\telse\n\t\troot[\"presentation-dom\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Dom from \"./dom.js\";\n\nmodule.exports = Dom;\n","// pull from Next as a module\nconst isString = (val) => {\n  return (typeof val === \"string\") || ((!!val && typeof val === \"object\") && Object.prototype.toString.call(val) === \"[object String]\");\n};\n\n/**\n * DOM related functions\n */\nclass Dom {\n  constructor() {\n  };\n\n  /**\n   * Gets the height of the browser viewport\n   * @returns {number} The height of the viewport\n   * @static\n   */\n  static getViewportHeight() {\n    return window.innerHeight;\n  };\n  /**\n   * Gets the width of the browser viewport\n   * @returns {number} The width of the viewport\n   * @static\n   */\n  static getViewportWidth() {\n    return window.innerWidth;\n  };\n  /**\n   * Sets the value of an element<br/>\n   * Will detect the correct method to do so by element type\n   * @param {Node} el Element or string of element selector\n   * @param {string} value Value to set (or HTML)\n   * @param {boolean} onlyText Value will set as text only\n   * @static\n   */\n  static setValue(el, value, onlyText) {\n    if (el) {\n      value = (value) ? value : \"\";\n      const myEl = this.selector(el);\n      if (myEl && (myEl.nodeType === 1) && (myEl.nodeName === \"select\" || myEl.nodeName === \"SELECT\")) {\n        // Select box\n        //_logger.debug(\"Select box (not supported) set to - \" + value);\n      } else if (myEl && (myEl.nodeType === 1) &&\n          (myEl.nodeName === \"input\" || myEl.nodeName === \"INPUT\" ||\n          myEl.nodeName === \"textarea\" || myEl.nodeName === \"TEXTAREA\")) {\n        myEl.value = value;\n      } else if (myEl && (myEl.nodeType === 1)) {\n        if (onlyText){\n          myEl.innerText = value;\n        } else {\n          myEl.innerHTML = value;\n        }\n      }\n    }\n  };\n  /**\n   * Gets the value of an element<br/>\n   * Will detect the correct method to do so by element type\n   * @param {Node} el Element or string of element selector\n   * @returns {string} Returns the value of the element (or HTML)\n   * @static\n   */\n  static getValue(el) {\n    if (el) {\n      const myEl = this.selector(el);\n      if (myEl && (myEl.nodeType === 1) &&\n          (myEl.nodeName === \"input\" || myEl.nodeName === \"INPUT\" ||\n          myEl.nodeName === \"textarea\" || myEl.nodeName === \"TEXTAREA\" ||\n          myEl.nodeName === \"select\" || myEl.nodeName === \"SELECT\")) {\n        return myEl.value;\n      } else if (myEl && (myEl.nodeType === 1)) {\n        return myEl.innerHTML;\n      }\n    }\n    return null;\n  };\n  /**\n   * Selector function<br/>\n   * Supports full query selection\n   * @param {string} query Element or string of element selector\n   * @returns {Node} Returns the element (or first of type)\n   * @static\n   */\n  static selector(query) {\n    if (query) {\n      return isString(query) ? document.querySelector(query) : query;\n    }\n    return null;\n  };\n  /**\n   * Selectors function<br/>\n   * Supports full query selection\n   * @param {string} query Element or string of element selector\n   * @returns {NodeList} Returns all the nodes selected\n   * @static\n   */\n  static selectors(query) {\n    if (query) {\n      return isString(query) ? document.querySelectorAll(query) : query;\n    }\n    return null;\n  };\n  /**\n   * Query function<br/>\n   * Supports full query selection but acts like jQuery\n   * @param {string} query Element or string of element selector\n   * @param {Node} el Element to start from (optional)\n   * @returns {NodeList|Node} Returns all the nodes selected\n   * @static\n   */\n  static query(query, el) {\n    if (query) {\n      let d = document;\n      if (el) {\n        d = Dom.selector(el);\n      }\n      const nodelist = isString(query) ? d.querySelectorAll(query) : query;\n\n      if (nodelist.length === 1) {\n        return nodelist[0];\n      }\n      return nodelist;\n    }\n    return null;\n  };\n  /**\n   * Hides an element\n   * @param {Node} el Element or string of element selector\n   * @static\n   */\n  static hide(el) {\n    const myEl = this.selector(el);\n    if (myEl) {\n      myEl.style.display = \"none\";\n      myEl.style.visibility = \"hidden\";\n    }\n  };\n  /**\n   * Shows an element\n   * @param {Node} el Element or string of element selector\n   * @param {string} display Value to set for 'display' property (optional)\n   * @static\n   */\n  static show(el, display) {\n    const myEl = this.selector(el);\n    if (myEl) {\n      myEl.style.display = (display) ? display : \"block\";\n      myEl.style.visibility = \"visible\";\n    }\n  };\n  /**\n   * Sets the class attribute (completely)\n   * @param {Node} el Element or string of element selector\n   * @param {string} cls the class value\n   * @static\n   */\n  static setClass(el, cls) {\n    const myEl = this.selector(el);\n    if (myEl) {\n      myEl.setAttribute(\"class\", cls);\n    }\n  };\n  /**\n   * Adds a class attribute\n   * @param {Node} el Element or string of element selector\n   * @param {string} cls the class value\n   * @static\n   */\n  static addClass(el, cls) {\n    const myEl = this.selector(el);\n    if (myEl) {\n      myEl.classList.add(cls);\n      //console.debug(`addClass ${cls} to ${el}`);\n    }\n  };\n  /**\n   * Remove a class attribute\n   * @param {Node} el Element or string of element selector\n   * @param {string} cls the class value\n   * @static\n   */\n  static removeClass(el, cls) {\n    const myEl = this.selector(el);\n    if (myEl) {\n      myEl.classList.remove(cls);\n      //console.debug(`removeClass ${cls} to ${el}`);\n    }\n  };\n  /**\n   * Empty a element container\n   * @param {Node} el Element or string of element selector\n   * @static\n   */\n  static empty(el) {\n    this.setValue(el, \"\", false);\n  };\n  /**\n   * injectTemplate method - Injects a template element at a mount point\n   * @param {string} template The template selector\n   * @param {Node} mount The mount point as Document.Element or String\n   * @static\n   */\n  static injectTemplate(template, mount) {\n    const t = this.selector(template), el = this.selector(mount);\n    if (t && el) {\n      const clone = document.importNode(t.content, true);\n      el.appendChild(clone);\n    }\n  };\n};\n\nexport default Dom;\n"],"sourceRoot":""}