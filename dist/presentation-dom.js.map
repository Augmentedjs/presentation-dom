{"version":3,"sources":["webpack://presentation-dom/webpack/universalModuleDefinition","webpack://presentation-dom/webpack/bootstrap","webpack://presentation-dom/./src/index.js","webpack://presentation-dom/./src/dom.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$","Dom","isString","val","constructor","window","myEl","selector","document","nodelist","el","clone"],"mappings":"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","file":"presentation-dom.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"presentation-dom\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"presentation-dom\"] = factory();\n\telse\n\t\troot[\"presentation-dom\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Dom from \"./dom.js\";\n\n/**\n * Augmented jQuery-like selectors usinge native selectors</br/>\n * Will return a nodelist for all selections unless only one is found.\n * @method $\n * @borrows Dom.query\n * @example\n * $(\"#myElement\");\n * $(\"section#main header\");\n *   - or start from Element:\n * $(\"header\", mainSectionEl);\n */\nconst $ = Dom.query;\n\nmodule.exports = Dom;\nmodule.exports.$ = $;\n","// pull from Next as a module\nconst isString = (val) => {\n  return (typeof val === \"string\") || ((!!val && typeof val === \"object\") && Object.prototype.toString.call(val) === \"[object String]\");\n};\n\n/**\n * DOM related functions\n */\nclass Dom {\n  constructor() {\n  };\n\n  /**\n   * Gets the height of the browser viewport\n   * @returns {number} The height of the viewport\n   * @static\n   */\n  static getViewportHeight() {\n    return window.innerHeight;\n  };\n  /**\n   * Gets the width of the browser viewport\n   * @returns {number} The width of the viewport\n   * @static\n   */\n  static getViewportWidth() {\n    return window.innerWidth;\n  };\n  /**\n   * Sets the value of an element<br/>\n   * Will detect the correct method to do so by element type\n   * @param {string|Node} el el Element or string of element selector\n   * @param {string} value Value to set (or HTML)\n   * @param {boolean} onlyText Value will set as text only\n   * @static\n   */\n  static setValue(el, value, onlyText) {\n    if (el) {\n      value = (value) ? value : \"\";\n      const myEl = this.selector(el);\n      if (myEl && (myEl.nodeType === 1) && (myEl.nodeName === \"select\" || myEl.nodeName === \"SELECT\")) {\n        // Select box\n        //_logger.debug(\"Select box (not supported) set to - \" + value);\n      } else if (myEl && (myEl.nodeType === 1) &&\n          (myEl.nodeName === \"input\" || myEl.nodeName === \"INPUT\" ||\n          myEl.nodeName === \"textarea\" || myEl.nodeName === \"TEXTAREA\")) {\n        myEl.value = value;\n      } else if (myEl && (myEl.nodeType === 1)) {\n        if (onlyText){\n          myEl.innerText = value;\n        } else {\n          myEl.innerHTML = value;\n        }\n      }\n      return myEl;\n    }\n    return null;\n  };\n  /**\n   * Gets the value of an element<br/>\n   * Will detect the correct method to do so by element type\n   * @param {string|Node} el el Element or string of element selector\n   * @returns {string} Returns the value of the element (or HTML)\n   * @static\n   */\n  static getValue(el) {\n    if (el) {\n      const myEl = this.selector(el);\n      if (myEl && (myEl.nodeType === 1) &&\n          (myEl.nodeName === \"input\" || myEl.nodeName === \"INPUT\" ||\n          myEl.nodeName === \"textarea\" || myEl.nodeName === \"TEXTAREA\" ||\n          myEl.nodeName === \"select\" || myEl.nodeName === \"SELECT\")) {\n        return myEl.value;\n      } else if (myEl && (myEl.nodeType === 1)) {\n        return myEl.innerHTML;\n      }\n    }\n    return null;\n  };\n  /**\n   * Selector function<br/>\n   * Supports full query selection\n   * @param {string} query Element or string of element selector\n   * @returns {Node} Returns the element (or first of type)\n   * @static\n   */\n  static selector(query) {\n    if (query) {\n      return isString(query) ? document.querySelector(query) : query;\n    }\n    return null;\n  };\n  /**\n   * Selectors function<br/>\n   * Supports full query selection\n   * @param {string} query Element or string of element selector\n   * @returns {NodeList} Returns all the nodes selected\n   * @static\n   */\n  static selectors(query) {\n    if (query) {\n      return isString(query) ? document.querySelectorAll(query) : query;\n    }\n    return null;\n  };\n  /**\n   * Query function<br/>\n   * Supports full query selection but acts like jQuery\n   * @param {string} query Element or string of element selector\n   * @param {string|Node} el el Element to start from (optional)\n   * @returns {NodeList|Node} Returns all the nodes selected\n   * @static\n   */\n  static query(query, el) {\n    if (query) {\n      let d = document;\n      if (el) {\n        d = Dom.selector(el);\n      }\n      const nodelist = isString(query) ? d.querySelectorAll(query) : query;\n\n      if (nodelist.length === 1) {\n        return nodelist[0];\n      }\n      return nodelist;\n    }\n    return null;\n  };\n  /**\n   * Hides an element\n   * @param {string|Node} el el Element or string of element selector\n   * @static\n   */\n  static hide(el) {\n    const myEl = this.selector(el);\n    if (myEl) {\n      myEl.style.display = \"none\";\n      myEl.style.visibility = \"hidden\";\n    }\n    return myEl;\n  };\n  /**\n   * Shows an element\n   * @param {string|Node} el el Element or string of element selector\n   * @param {string} display Value to set for 'display' property (optional)\n   * @static\n   */\n  static show(el, display) {\n    const myEl = this.selector(el);\n    if (myEl) {\n      myEl.style.display = (display) ? display : \"block\";\n      myEl.style.visibility = \"visible\";\n    }\n    return myEl;\n  };\n  /**\n   * Sets the class attribute (completely)\n   * @param {string|Node} el el Element or string of element selector\n   * @param {string} cls the class value\n   * @static\n   */\n  static setClass(el, cls) {\n    const myEl = this.selector(el);\n    if (myEl) {\n      myEl.setAttribute(\"class\", cls);\n    }\n    return myEl;\n  };\n  /**\n   * Adds a class attribute\n   * @param {string|Node} el el Element or string of element selector\n   * @param {string} cls the class value\n   * @static\n   */\n  static addClass(el, cls) {\n    const myEl = this.selector(el);\n    if (myEl) {\n      myEl.classList.add(cls);\n      //console.debug(`addClass ${cls} to ${el}`);\n    }\n    return myEl;\n  };\n  /**\n   * Remove a class attribute\n   * @param {string|Node} el el Element or string of element selector\n   * @param {string} cls the class value\n   * @static\n   */\n  static removeClass(el, cls) {\n    const myEl = this.selector(el);\n    if (myEl) {\n      myEl.classList.remove(cls);\n      //console.debug(`removeClass ${cls} to ${el}`);\n    }\n    return myEl;\n  };\n\n  /**\n   * Replace a class attribute with a new one\n   * @param {string|Node} el el Element or string of element selector\n   * @param {string} oldCls the old class value\n   * @param {string} newCls the new class value\n   * @static\n   */\n  static replaceClass(el, oldCls, newCls) {\n    const myEl = this.selector(el);\n    if (myEl) {\n      myEl.classList.replace(oldCls, newCls);\n    }\n    return myEl;\n  };\n\n  /**\n   * Returns true if it contains the class\n   * @param {string|Node} el Element or string of element selector\n   * @param {string} cls the class value\n   * @returns {boolean} Returns true is contains class\n   * @static\n   */\n  static containsClass(el, cls) {\n    const myEl = this.selector(el);\n    if (myEl && myEl.classList) {\n      return myEl.classList.contains(cls);\n    }\n    return false;\n  };\n\n  /**\n   * Toggle class on element\n   * @param {string|Node} el Element or string of element selector\n   * @param {string} cls the class \n   * @static\n   */\n  static toggleClass(el, cls) {\n    const myEl = this.selector(el);\n    if (myEl) {\n      myEl.classList.toggle(cls);\n    }\n    return myEl;\n  };\n\n  /**\n   * Empty a element container\n   * @param {string|Node} el Element or string of element selector\n   * @static\n   */\n  static empty(el) {\n    this.setValue(el, \"\", false);\n    return el;\n  };\n  /**\n   * injectTemplate method - Injects a template element at a mount point\n   * @param {string} template The template selector\n   * @param {Node} mount The mount point as Document.Element or String\n   * @static\n   */\n  static injectTemplate(template, mount) {\n    const t = this.selector(template), el = this.selector(mount);\n    if (t && el) {\n      const clone = document.importNode(t.content, true);\n      el.appendChild(clone);\n    }\n    return el;\n  };\n};\n\nexport default Dom;\n"],"sourceRoot":""}